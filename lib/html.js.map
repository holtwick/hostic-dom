{
  "version": 3,
  "sources": ["src/html.js"],
  "sourcesContent": ["// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n// Special cases:\n// 1. <noop> is an element that is not printed out, can be used to create a list of elements\n// 2. Attribute name '__' gets transformed to ':' for namespace emulation\n// 3. Emulate CDATA by <cdata> element\n\n// TODO: Probably use this instead of html.js\n\nimport { hArgumentParser } from './h.js'\nimport { escapeHTML } from './encoding'\n\nlet USED_JSX = [] // HACK:dholtwick:2016-08-23\n\nexport function CDATA(s) {\n  s = '<![CDATA[' + s + ']]>'\n  USED_JSX.push(s)\n  return s\n}\n\nexport function HTML(s) {\n  USED_JSX.push(s)\n  return s\n}\n\n// export function prependXMLIdentifier(s) {\n//   return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + s\n// }\n\n// https://reactjs.org/docs/jsx-in-depth.html\nexport function markup(xmlMode, tag, attrs, children) {\n  // console.log('markup', xmlMode, tag, attrs, children)\n  const hasChildren = children && children.length > 0\n  let s = ''\n  tag = tag.replace(/__/g, ':')\n  if (tag !== 'noop') {\n    if (tag !== 'cdata') {\n      s += `<${tag}`\n    } else {\n      s += '<![CDATA['\n    }\n\n    // Add attributes\n    for (let name in attrs) {\n      if (name && attrs.hasOwnProperty(name)) {\n        let v = attrs[name]\n        if (name === 'html') {\n          continue\n        }\n        if (name.toLowerCase() === 'classname') {\n          name = 'class'\n        }\n        name = name.replace(/__/g, ':')\n        if (v === true) {\n          s += ` ${name}=\"${name}\"`\n        } else if (name === 'style' && typeof v === 'object') {\n          s += ` ${name}=\"${\n            Object.keys(v).filter(\n              k => v[k] != null,\n            ).map(\n              k => {\n                let vv = v[k]\n                vv = typeof vv === 'number' ? vv + 'px' : vv\n                return `${k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${vv}`\n              }).join(';')\n          }\"`\n        } else if (v !== false && v != null) {\n          s += ` ${name}=\"${escapeHTML(v.toString())}\"`\n        }\n      }\n    }\n    if (tag !== 'cdata') {\n      if (xmlMode && !hasChildren) {\n        s += ' />'\n        USED_JSX.push(s)\n        return s\n      } else {\n        s += `>`\n      }\n    }\n\n    if (!xmlMode) {\n      if (['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'].indexOf(tag) !== -1) {\n        USED_JSX.push(s)\n        return s\n      }\n    }\n  }\n\n  // Append children\n  if (hasChildren) {\n    for (let child of children) {\n      if (child != null && child !== false) {\n        if (!Array.isArray(child)) {\n          child = [child]\n        }\n        for (let c of child) {\n          if (USED_JSX.indexOf(c) !== -1 || tag === 'script' || tag === 'style') {\n            s += c\n          } else {\n            s += escapeHTML(c.toString())\n          }\n        }\n      }\n    }\n  }\n\n  if (attrs.html) {\n    s += attrs.html\n  }\n\n  if (tag !== 'noop') {\n    if (tag !== 'cdata') {\n      s += `</${tag}>`\n    } else {\n      s += ']]>'\n    }\n  }\n  USED_JSX.push(s)\n  return s\n}\n\nexport function html(itag, iattrs, ...ichildren) {\n  let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(false, tag, attrs, children)\n}\n\nhtml.firstLine = '<!DOCTYPE html>'\nhtml.html = true\n\nexport let h = html\n"],
  "mappings": "AASA;AACA;AAEA,IAAI,WAAW;AAER,sBAAe;AACpB,MAAI,cAAc,IAAI;AACtB,WAAS,KAAK;AACd,SAAO;AAAA;AAGF,qBAAc;AACnB,WAAS,KAAK;AACd,SAAO;AAAA;AAQF,uBAAgB,SAAS,KAAK,OAAO;AAE1C,QAAM,cAAc,YAAY,SAAS,SAAS;AAClD,MAAI,IAAI;AACR,QAAM,IAAI,QAAQ,OAAO;AACzB,MAAI,QAAQ;AACV,QAAI,QAAQ;AACV,WAAK,IAAI;AAAA;AAET,WAAK;AAAA;AAIP,aAAS,QAAQ;AACf,UAAI,QAAQ,MAAM,eAAe;AAC/B,YAAI,IAAI,MAAM;AACd,YAAI,SAAS;AACX;AAAA;AAEF,YAAI,KAAK,kBAAkB;AACzB,iBAAO;AAAA;AAET,eAAO,KAAK,QAAQ,OAAO;AAC3B,YAAI,MAAM;AACR,eAAK,IAAI,SAAS;AAAA,mBACT,SAAS,WAAW,OAAO,MAAM;AAC1C,eAAK,IAAI,SACP,OAAO,KAAK,GAAG,OACb,OAAK,EAAE,MAAM,MACb,IACA;AACE,gBAAI,KAAK,EAAE;AACX,iBAAK,OAAO,OAAO,WAAW,KAAK,OAAO;AAC1C,mBAAO,GAAG,EAAE,QAAQ,mBAAmB,SAAS,iBAAiB;AAAA,aAChE,KAAK;AAAA,mBAEH,MAAM,SAAS,KAAK;AAC7B,eAAK,IAAI,SAAS,WAAW,EAAE;AAAA;AAAA;AAAA;AAIrC,QAAI,QAAQ;AACV,UAAI,WAAW,CAAC;AACd,aAAK;AACL,iBAAS,KAAK;AACd,eAAO;AAAA;AAEP,aAAK;AAAA;AAAA;AAIT,QAAI,CAAC;AACH,UAAI,CAAC,QAAQ,QAAQ,MAAM,OAAO,SAAS,MAAM,OAAO,SAAS,UAAU,QAAQ,QAAQ,SAAS,UAAU,SAAS,OAAO,QAAQ,SAAS;AAC7I,iBAAS,KAAK;AACd,eAAO;AAAA;AAAA;AAAA;AAMb,MAAI;AACF,aAAS,SAAS;AAChB,UAAI,SAAS,QAAQ,UAAU;AAC7B,YAAI,CAAC,MAAM,QAAQ;AACjB,kBAAQ,CAAC;AAAA;AAEX,iBAAS,KAAK;AACZ,cAAI,SAAS,QAAQ,OAAO,MAAM,QAAQ,YAAY,QAAQ;AAC5D,iBAAK;AAAA;AAEL,iBAAK,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5B,MAAI,MAAM;AACR,SAAK,MAAM;AAAA;AAGb,MAAI,QAAQ;AACV,QAAI,QAAQ;AACV,WAAK,KAAK;AAAA;AAEV,WAAK;AAAA;AAAA;AAGT,WAAS,KAAK;AACd,SAAO;AAAA;AAGF,qBAAc,MAAM,WAAW;AACpC,MAAI,CAAE,KAAK,OAAO,YAAa,gBAAgB,MAAM,QAAQ;AAC7D,SAAO,OAAO,OAAO,KAAK,OAAO;AAAA;AAGnC,KAAK,YAAY;AACjB,KAAK,OAAO;AAEL,WAAI,IAAI;",
  "names": []
}
