{
  "version": 3,
  "sources": ["src/vdom.js"],
  "sourcesContent": ["// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { hFactory } from './h'\nimport { html } from './html'\nimport { matchSelector } from './vcss.js'\n\n// For node debugging\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\n\nlet B = { 'fontWeight': 'bold' }\nlet I = { 'fontStyle': 'italic' }\nlet M = { 'backgroundColor': 'rgb(255, 250, 165)' }\nlet U = { 'textDecorations': 'underline' }\nlet S = { 'textDecorations': 'line-through' }\n// let C = {}\n\nconst log = require('debug')('hostic:vdom')\n\nlet DEFAULTS = {\n  'b': B,\n  'strong': B,\n  'em': I,\n  'i': I,\n  'mark': M,\n  'u': U,\n  'a': U,\n  's': S,\n  'del': S,\n  'ins': M,\n  'strike': S,\n  // 'code': C,\n  // 'tt': C\n}\n\nfunction cloneObject(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport class VNode {\n\n  static ELEMENT_NODE = 1\n  static TEXT_NODE = 3\n  static CDATA_SECTION_NODE = 4\n  static PROCESSING_INSTRUCTION_NODE = 7\n  static COMMENT_NODE = 8\n  static DOCUMENT_NODE = 9\n  static DOCUMENT_TYPE_NODE = 10\n  static DOCUMENT_FRAGMENT_NODE = 11\n\n  get nodeType() {\n    console.error('Subclasses should define nodeType!')\n    return 0\n  }\n\n  get nodeName() {\n    console.error('Subclasses should define nodeName!')\n    return ''\n  }\n\n  get nodeValue() {\n    return null\n  }\n\n  constructor() {\n    this._parentNode = null\n    this._childNodes = []\n  }\n\n  _fixChildNodesParent() {\n    this._childNodes.forEach(node => node._parentNode = this)\n  }\n\n  insertBefore(newNode, node = null) {\n    if (newNode !== node) {\n      let index = node ? this._childNodes.indexOf(node) : 0\n      if (index < 0) index = 0\n      this._childNodes.splice(index, 0, newNode)\n      this._fixChildNodesParent()\n    }\n  }\n\n  appendChild(node) {\n    if (node === this) {\n      console.warn('Cannot appendChild to self')\n      return\n    }\n    // log('appendChild', node, this)\n\n    if (node instanceof VDocument) {\n      console.warn('No defined how to append a document to a node!', node)\n    }\n\n    if (node instanceof VDocumentFragment) {\n      for (let c of [...node._childNodes]) { // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    }\n    else if (node instanceof VNode) {\n      node.remove()\n      this._childNodes.push(node)\n    } else {\n      // Fallback for unknown data\n      try {\n        this._childNodes.push(new VTextNode(JSON.stringify(node, null, 2)))\n      } catch (err) {\n        console.error(`The data ${node} to be added to ${this.render()} is problematic: ${err}`)\n      }\n    }\n    this._fixChildNodesParent()\n  }\n\n  removeChild(node) {\n    let i = this._childNodes.indexOf(node)\n    if (i >= 0) {\n      node._parentNode = null\n      this._childNodes.splice(i, 1)\n      this._fixChildNodesParent()\n    }\n  }\n\n  remove() {\n    this?.parentNode?.removeChild(this)\n    return this\n  }\n\n  replaceChildren(...nodes) {\n    this._childNodes = nodes.map(n => typeof n === 'string' ? new VTextNode(n) : n.remove())\n    this._fixChildNodesParent()\n  }\n\n  replaceWith(...nodes) {\n    let p = this._parentNode\n    if (p) {\n      let index = this._indexInParent()\n      if (index >= 0) {\n        nodes = nodes.map(n => typeof n === 'string' ? new VTextNode(n) : n.remove())\n        p._childNodes.splice(index, 1, ...nodes)\n        this._parentNode = null\n        p._fixChildNodesParent()\n      }\n    }\n  }\n\n  _indexInParent() {\n    if (this._parentNode) {\n      return this._parentNode.childNodes.indexOf(this)\n    }\n    return -1\n  }\n\n  get parentNode() {\n    return this._parentNode\n  }\n\n  get childNodes() {\n    return this._childNodes || []\n  }\n\n  get firstChild() {\n    return this._childNodes[0]\n  }\n\n  get lastChild() {\n    return this._childNodes[this._childNodes.length - 1]\n  }\n\n  get nextSibling() {\n    let i = this._indexInParent()\n    if (i != null) {\n      return this.parentNode.childNodes[i + 1] || null\n    }\n    return null\n  }\n\n  get previousSibling() {\n    let i = this._indexInParent()\n    if (i > 0) {\n      return this.parentNode.childNodes[i - 1] || null\n    }\n    return null\n  }\n\n  flatten({ condition = node => node instanceof VElement } = {}) {\n    let elements = []\n    if (condition(this)) {\n      elements.push(this)\n    }\n    for (let child of this._childNodes) {\n      elements.push(...child.flatten({ condition }))\n    }\n    return elements\n  }\n\n  render() {\n    return ''\n  }\n\n  get textContent() {\n    return this._childNodes.map(c => c.textContent).join('')\n  }\n\n  set textContent(text) {\n    this._childNodes = []\n    if (text) {\n      this.appendChild(new VTextNode(text.toString()))\n    }\n  }\n\n  contains(otherNode) {\n    if (otherNode === this) return true\n    // if (this._childNodes.includes(otherNode)) return true\n    return this._childNodes.some(n => n.contains(otherNode))\n  }\n\n  get ownerDocument() {\n    if (this.nodeType === VNode.DOCUMENT_NODE || this.nodeType === VNode.DOCUMENT_FRAGMENT_NODE) {\n      return this\n    }\n    return this?._parentNode?.ownerDocument\n  }\n\n  // cloneNode(deep) {\n  //   return _.cloneDeep(this)\n  // }\n\n  toString() {\n    return `${this.nodeName}`\n    // return `${this.nodeName}: ${JSON.stringify(this.nodeValue)}`\n  }\n\n  [inspect]() {\n    return `${this.constructor.name} \"${this.render()}\"`;\n  }\n}\n\nexport class VTextNode extends VNode {\n\n  get nodeType() {\n    return VNode.TEXT_NODE\n  }\n\n  get nodeName() {\n    return '#text'\n  }\n\n  get nodeValue() {\n    return this._text || ''\n  }\n\n  get textContent() {\n    return this.nodeValue\n  }\n\n  constructor(text = '') {\n    super()\n    this._text = text\n  }\n\n  render() {\n    return this._text\n  }\n\n}\n\nexport class VNodeQuery extends VNode {\n\n  getElementById(name) {\n    return this.flatten().find(e => e._attributes['id'] === name)\n  }\n\n  getElementsByClassName(name) {\n    return this.flatten().filter(e => e.classList.contains(name))\n  }\n\n  matches(selector) {\n    return matchSelector(selector, this)\n  }\n\n  querySelectorAll(selector) {\n    return this.flatten().filter(e => e.matches(selector))\n  }\n\n  querySelector(selector) {\n    return this.flatten().find(e => e.matches(selector))\n  }\n\n  //\n\n  parent(selector) {\n    if (this.matches(selector)) {\n      return this\n    }\n    if (this.parentNode == null) {\n      return null\n    }\n    return this.parentNode?.parent(selector)\n  }\n\n  handle(selector, handler) {\n    let i = 0\n    for (let el of this.querySelectorAll(selector)) {\n      handler(el, i++)\n    }\n  }\n\n}\n\n\nexport class VElement extends VNodeQuery {\n\n  get nodeType() {\n    return VNode.ELEMENT_NODE\n  }\n\n  get nodeName() {\n    return this._nodeName\n  }\n\n  constructor(name = 'div', attrs = {}) {\n    super()\n    this._nodeName = (name || '').toUpperCase()\n    this._attributes = attrs || {}\n    this._styles = null\n  }\n\n  get attributes() {\n    return this._attributes\n  }\n\n  setAttribute(name, value) {\n    this._attributes[name] = value\n    this._styles = null\n  }\n\n  getAttribute(name) {\n    return this._attributes[name]\n  }\n\n  removeAttribute(name) {\n    delete this._attributes[name]\n  }\n\n  hasAttribute(name) {\n    return this._attributes[name] != null\n  }\n\n  get style() {\n    if (this._styles == null) {\n      let styles = cloneObject(DEFAULTS[this.tagName.toLowerCase()]) || {}\n      let styleString = this.getAttribute('style')\n      if (styleString) {\n        let m\n        let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g\n        while ((m = re.exec(styleString))) {\n          let name = m[1]\n          let value = m[2].trim()\n          styles[name] = value\n          let camel = (s) => s.replace(/[A-Z]/g, '-$&').toLowerCase()\n          styles[camel] = value\n        }\n      }\n      this._styles = styles\n    }\n    return this._styles\n  }\n\n  get tagName() {\n    return this._nodeName\n  }\n\n  get id() {\n    return this._attributes.id\n  }\n\n  set id(value) {\n    this._attributes.id = value\n  }\n\n  get src() {\n    return this._attributes.src\n  }\n\n  set src(value) {\n    this._attributes.src = value\n  }\n\n  //\n\n  getElementsByTagName(name) {\n    name = name.toUpperCase()\n    let elements = this.flatten()\n    if (name !== '*') {\n      return elements.filter(e => e.tagName === name)\n    }\n    return elements\n  }\n\n  // html\n\n  get innerHTML() {\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  set innerHTML(html) {\n    if (this.setInnerHTML) {\n      this.setInnerHTML(html)\n    } else {\n      throw 'set innerHTML not implemented'\n    }\n  }\n\n  get outerHTML() {\n    return this.render(html)\n  }\n\n  // class\n\n  get className() {\n    return this._attributes['class'] || ''\n  }\n\n  set className(name) {\n    if (Array.isArray(name)) {\n      name = name.filter(n => !!n).join(' ')\n    } else if (typeof name === 'object') {\n      name = (Object.entries(name)\n        .filter(([k, v]) => !!v)\n        .map(([k, v]) => k)\n        .join(' '))\n    }\n    this._attributes['class'] = name\n  }\n\n  get classList() {\n    let self = this\n    let classNames = (this.className || '').trim().split(/\\s+/g) || []\n    // log('classList', classNames)\n    return {\n      contains(s) {\n        return classNames.includes(s)\n      },\n      add(s) {\n        if (!(classNames.includes(s))) {\n          classNames.push(s)\n          self.className = classNames\n        }\n      },\n      remove(s) {\n        let index = classNames.indexOf(s)\n        if (index >= 0) {\n          classNames.splice(index, 1)\n          self.className = classNames\n        }\n      },\n    }\n  }\n\n  //\n\n  render(h = html) {\n    return h(\n      this.tagName.toLowerCase(),\n      this.attributes,\n      this.childNodes.map(c => c.render(h)),\n    )\n  }\n\n}\n\nexport class VDocumentFragment extends VNodeQuery {\n\n  get nodeType() {\n    return VNode.DOCUMENT_FRAGMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document-fragment'\n  }\n\n  render(h = html) {\n    return (this._childNodes.map(c => c.render(h) || []).join(''))\n  }\n\n  get innerHTML() { // for debug\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  createElement(name, attrs = {}) {\n    return new VElement(name, attrs)\n  }\n\n  createDocumentFragment() {\n    return new VDocumentFragment()\n  }\n\n  createTextNode(text) {\n    return new VTextNode(text)\n  }\n\n}\n\nexport class VDocument extends VDocumentFragment {\n\n  get nodeType() {\n    return VNode.DOCUMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document'\n  }\n\n  get documentElement() {\n    return this.firstChild\n  }\n\n  // render(h = html) {\n  //   let content =  super.render(h)\n  //   if (h.firstLine) {\n  //     content = h.firstLine + '\\n' + content\n  //   }\n  //   return content\n  // }\n\n}\n\nexport class VHTMLDocument extends VDocument {\n\n  constructor() {\n    super()\n    let html = new VElement('html')\n    let body = new VElement('body')\n    let head = new VElement('head')\n    let title = new VElement('title')\n    html.appendChild(head)\n    head.appendChild(title)\n    html.appendChild(body)\n    this.appendChild(html)\n  }\n\n  get body() {\n    return this.querySelector('body')\n  }\n\n  get title() {\n    return this.querySelector('title')?.textContent\n  }\n\n  set title(title) {\n    this.querySelector('title').textContent = title\n  }\n\n  get head() {\n    return this.querySelector('head')\n  }\n\n  render(h = html) {\n    let content = super.render(h)\n    if (h.firstLine) {\n      content = h.firstLine + '\\n' + content\n    }\n    return content\n  }\n\n}\n\nexport function createDocument() {\n  return new VDocument()\n}\n\n\nexport function createHTMLDocument() {\n  return new VHTMLDocument()\n}\n\nexport let document = createDocument()\nexport let h = hFactory({ document })\n"],
  "mappings": "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",
  "names": []
}
