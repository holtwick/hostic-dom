{
  "version": 3,
  "sources": ["src/h.js", "src/encoding.js", "src/html.js", "src/vcss.js", "src/vdom.js", "src/vdomparser.js", "src/tidy.js", "src/xml.js", "src/index.js"],
  "sourcesContent": ["// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n/*\n * Abstraction for h/jsx like DOM descriptions.\n * It is used in DOM, VDOM\n *\n */\n\nfunction _h(context, tag, attrs, children) {\n  if (typeof tag === 'function') {\n    return tag.call(null, {\n      props: { ...attrs, children },\n      attrs,\n      children,\n      h: context.h,\n      context,\n    })\n  } else {\n    let el\n    if (tag) {\n      if (tag.toLowerCase() === 'fragment') {\n        el = context.document.createDocumentFragment()\n      } else {\n        el = context.document.createElement(tag)\n      }\n    } else {\n      el = context.document.createElement('div')\n    }\n    if (attrs) {\n      for (let [key, value] of Object.entries(attrs)) {\n        if (key && typeof key === 'string') {\n          key = key.toLowerCase()\n        }\n        if (key === 'classname') {\n          el.className = value\n        } else if (key === 'on') {\n          Object.entries(value).forEach(([name, value]) => {\n            el.setAttribute('on' + name, value)\n          })\n          // else if (key.indexOf('on') === 0) {\n          //   if (el.addEventListener) {\n          //     el.addEventListener(key.substring(2), value)\n          //     continue\n          //   }\n        } else if (value !== false && value != null) {\n          if (value === true) {\n            el.setAttribute(key, key)\n          } else {\n            el.setAttribute(key, value.toString())\n          }\n        }\n      }\n    }\n    if (children) {\n      for (const childOuter of children) {\n        let cc = Array.isArray(childOuter) ? [...childOuter] : [childOuter]\n        for (let child of cc) {\n          if (child) {\n            if (child !== false && child != null) {\n              if (typeof child !== 'object') {\n                el.appendChild(context.document.createTextNode(child.toString()))\n              } else {\n                el.appendChild(child)\n              }\n            }\n          }\n        }\n      }\n    }\n    return el\n  }\n}\n\nexport function hArgumentParser(tag, attrs, ...children) {\n  if (typeof tag === 'object') {\n    tag = 'fragment'\n    children = tag.children\n    attrs = tag.attrs\n  }\n  if (Array.isArray(attrs)) {\n    children = attrs\n    attrs = {}\n  } else if (attrs) {\n    if (attrs.attrs) {\n      attrs = { ...attrs.attrs, ...attrs }\n      delete attrs.attrs\n    }\n  } else {\n    attrs = {}\n  }\n  return {\n    tag,\n    attrs,\n    // @ts-ignore\n    children: children.flat(Infinity),\n  }\n}\n\n// global.hh = function (...args) {\n//   console.log('hh', args)\n// }\n\nexport function hFactory(context) {\n  // let context = { document }\n  context.h = function h(itag, iattrs, ...ichildren) {\n    let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n    return _h(context, tag, attrs, children)\n  }\n  return context.h\n}\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nconst rxEscape = /[\\-\\[\\]\\/{}()*+?.^$|]/g\n\nexport function escapeRegExp(value) {\n  if (!value) return ''\n  if (value instanceof RegExp) {\n    return value.source\n  }\n  return value.replace(rxEscape, '\\\\$&')\n}\n\n// export {\n//   escape as escapeHTML,\n//   unescape as unescapeHTML,\n// } from 'he'\n\nexport function escapeHTML(s) {\n  if (!s) return s\n  return s\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&apos;')\n    .replace(/\"/g, '&quot;')\n}\n\nexport function unescapeHTML(s) {\n  if (!s) return s\n  return s\n    .replace(/&lt;/gi, '<')\n    .replace(/&gt;/gi, '>')\n    .replace(/&quot;/gi, '\"')\n    .replace(/&apos;/gi, '\\'')\n    .replace(/&amp;/gi, '&')\n}\n\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n// Special cases:\n// 1. <noop> is an element that is not printed out, can be used to create a list of elements\n// 2. Attribute name '__' gets transformed to ':' for namespace emulation\n// 3. Emulate CDATA by <cdata> element\n\n// TODO: Probably use this instead of html.js\n\nimport { hArgumentParser } from './h.js'\nimport { escapeHTML } from './encoding'\n\nlet USED_JSX = [] // HACK:dholtwick:2016-08-23\n\nexport function CDATA(s) {\n  s = '<![CDATA[' + s + ']]>'\n  USED_JSX.push(s)\n  return s\n}\n\nexport function HTML(s) {\n  USED_JSX.push(s)\n  return s\n}\n\n// export function prependXMLIdentifier(s) {\n//   return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + s\n// }\n\n// https://reactjs.org/docs/jsx-in-depth.html\nexport function markup(xmlMode, tag, attrs, children) {\n  // console.log('markup', xmlMode, tag, attrs, children)\n  const hasChildren = children && children.length > 0\n  let s = ''\n  tag = tag.replace(/__/g, ':')\n  if (tag !== 'noop') {\n    if (tag !== 'cdata') {\n      s += `<${tag}`\n    } else {\n      s += '<![CDATA['\n    }\n\n    // Add attributes\n    for (let name in attrs) {\n      if (name && attrs.hasOwnProperty(name)) {\n        let v = attrs[name]\n        if (name === 'html') {\n          continue\n        }\n        if (name.toLowerCase() === 'classname') {\n          name = 'class'\n        }\n        name = name.replace(/__/g, ':')\n        if (v === true) {\n          s += ` ${name}=\"${name}\"`\n        } else if (name === 'style' && typeof v === 'object') {\n          s += ` ${name}=\"${\n            Object.keys(v).filter(\n              k => v[k] != null,\n            ).map(\n              k => {\n                let vv = v[k]\n                vv = typeof vv === 'number' ? vv + 'px' : vv\n                return `${k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${vv}`\n              }).join(';')\n          }\"`\n        } else if (v !== false && v != null) {\n          s += ` ${name}=\"${escapeHTML(v.toString())}\"`\n        }\n      }\n    }\n    if (tag !== 'cdata') {\n      if (xmlMode && !hasChildren) {\n        s += ' />'\n        USED_JSX.push(s)\n        return s\n      } else {\n        s += `>`\n      }\n    }\n\n    if (!xmlMode) {\n      if (['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'].indexOf(tag) !== -1) {\n        USED_JSX.push(s)\n        return s\n      }\n    }\n  }\n\n  // Append children\n  if (hasChildren) {\n    for (let child of children) {\n      if (child != null && child !== false) {\n        if (!Array.isArray(child)) {\n          child = [child]\n        }\n        for (let c of child) {\n          if (USED_JSX.indexOf(c) !== -1 || tag === 'script' || tag === 'style') {\n            s += c\n          } else {\n            s += escapeHTML(c.toString())\n          }\n        }\n      }\n    }\n  }\n\n  if (attrs.html) {\n    s += attrs.html\n  }\n\n  if (tag !== 'noop') {\n    if (tag !== 'cdata') {\n      s += `</${tag}>`\n    } else {\n      s += ']]>'\n    }\n  }\n  USED_JSX.push(s)\n  return s\n}\n\nexport function html(itag, iattrs, ...ichildren) {\n  let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(false, tag, attrs, children)\n}\n\nhtml.firstLine = '<!DOCTYPE html>'\nhtml.html = true\n\nexport let h = html\n", "import { parse } from 'css-what'\n\nlet cache = {}\n\nexport function parseSelector(selector) {\n  let ast = cache[selector]\n  if (ast == null) {\n    ast = parse(selector)\n    cache[selector] = ast\n  }\n  return ast\n}\n\n// Just a very small subset for now: https://github.com/fb55/css-what#api\n\nexport function matchSelector(selector, element, { debug = false } = {}) {\n  for (let rules of parseSelector(selector)) {\n    if (debug) {\n      console.log('Selector:', selector)\n      console.log('Rules:', rules)\n      console.log('Element:', element)\n    }\n\n    function handleRules(element, rules) {\n      let success = false\n      for (let part of rules) {\n        const { type, name, action, value, ignoreCase = true, data } = part\n        if (type === 'attribute') {\n          if (action === 'equals') {\n            success = element.getAttribute(name) === value\n            if (debug) console.log('Attribute equals', success)\n          } else if (action === 'start') {\n            success = element.getAttribute(name)?.startsWith(value)\n            if (debug) console.log('Attribute start', success)\n          } else if (action === 'end') {\n            success = element.getAttribute(name)?.endsWith(value)\n            if (debug) console.log('Attribute start', success)\n          } else if (action === 'element') {\n            if (name === 'class') {\n              success = element.classList.contains(value)\n              if (debug) console.log('Attribute class', success)\n            } else {\n              success = element.getAttribute(name)?.includes(value)\n              if (debug) console.log('Attribute element', success)\n            }\n          } else if (action === 'exists') {\n            success = element.hasAttribute(name)\n            if (debug) console.log('Attribute exists', success)\n          } else {\n            console.warn('Unknown CSS selector action', action)\n          }\n        } else if (type === 'tag') {\n          success = element.tagName === name.toUpperCase()\n          if (debug) console.log('Is tag', success)\n        } else if (type === 'universal') {\n          success = true\n          if (debug) console.log('Is universal', success)\n        } else if (type === 'pseudo') {\n          if (name === 'not') {\n            let ok = true\n            data.forEach(rules => {\n              if (!handleRules(element, rules)) {\n                ok = false\n              }\n            })\n            success = !ok\n          }\n          if (debug) console.log('Is :not', success)\n          // } else if (type === 'descendant') {\n          //   element = element.\n        } else {\n          console.warn('Unknown CSS selector type', type, selector, rules)\n        }\n        // console.log(success, selector, part, element)\n        if (!success) break\n      }\n      return success\n    }\n\n    if (handleRules(element, rules)) {\n      return true\n    }\n  }\n  return false\n}\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { hFactory } from './h'\nimport { html } from './html'\nimport { matchSelector } from './vcss.js'\n\n// For node debugging\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nlet B = { 'fontWeight': 'bold' }\nlet I = { 'fontStyle': 'italic' }\nlet M = { 'backgroundColor': 'rgb(255, 250, 165)' }\nlet U = { 'textDecorations': 'underline' }\nlet S = { 'textDecorations': 'line-through' }\n// let C = {}\n\nlet DEFAULTS = {\n  'b': B,\n  'strong': B,\n  'em': I,\n  'i': I,\n  'mark': M,\n  'u': U,\n  'a': U,\n  's': S,\n  'del': S,\n  'ins': M,\n  'strike': S,\n  // 'code': C,\n  // 'tt': C\n}\n\nexport class VNode {\n\n  static ELEMENT_NODE = 1\n  static TEXT_NODE = 3\n  static CDATA_SECTION_NODE = 4\n  static PROCESSING_INSTRUCTION_NODE = 7\n  static COMMENT_NODE = 8\n  static DOCUMENT_NODE = 9\n  static DOCUMENT_TYPE_NODE = 10\n  static DOCUMENT_FRAGMENT_NODE = 11\n\n  get nodeType() {\n    console.error('Subclasses should define nodeType!')\n    return 0\n  }\n\n  get nodeName() {\n    console.error('Subclasses should define nodeName!')\n    return ''\n  }\n\n  get nodeValue() {\n    return null\n  }\n\n  constructor() {\n    this._parentNode = null\n    this._childNodes = []\n  }\n\n  cloneNode(deep = false) {\n    let node = new this.constructor()\n    if (deep) {\n      node._childNodes = this._childNodes.map(c => c.cloneNode(true))\n      node._fixChildNodesParent()\n    }\n    return node\n  }\n\n  _fixChildNodesParent() {\n    this._childNodes.forEach(node => node._parentNode = this)\n  }\n\n  insertBefore(newNode, node = null) {\n    if (newNode !== node) {\n      let index = node ? this._childNodes.indexOf(node) : 0\n      if (index < 0) index = 0\n      this._childNodes.splice(index, 0, newNode)\n      this._fixChildNodesParent()\n    }\n  }\n\n  appendChild(node) {\n    if (node === this) {\n      console.warn('Cannot appendChild to self')\n      return\n    }\n    // log('appendChild', node, this)\n\n    if (node instanceof VDocument) {\n      console.warn('No defined how to append a document to a node!', node)\n    }\n\n    if (node instanceof VDocumentFragment) {\n      for (let c of [...node._childNodes]) { // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    } else if (node instanceof VNode) {\n      node.remove()\n      this._childNodes.push(node)\n    } else {\n      // Fallback for unknown data\n      try {\n        this._childNodes.push(new VTextNode(JSON.stringify(node, null, 2)))\n      } catch (err) {\n        console.error(`The data ${node} to be added to ${this.render()} is problematic: ${err}`)\n      }\n    }\n    this._fixChildNodesParent()\n  }\n\n  removeChild(node) {\n    let i = this._childNodes.indexOf(node)\n    if (i >= 0) {\n      node._parentNode = null\n      this._childNodes.splice(i, 1)\n      this._fixChildNodesParent()\n    }\n  }\n\n  remove() {\n    this?.parentNode?.removeChild(this)\n    return this\n  }\n\n  replaceChildren(...nodes) {\n    this._childNodes = nodes.map(n => typeof n === 'string' ? new VTextNode(n) : n.remove())\n    this._fixChildNodesParent()\n  }\n\n  replaceWith(...nodes) {\n    let p = this._parentNode\n    if (p) {\n      let index = this._indexInParent()\n      if (index >= 0) {\n        nodes = nodes.map(n => typeof n === 'string' ? new VTextNode(n) : n.remove())\n        p._childNodes.splice(index, 1, ...nodes)\n        this._parentNode = null\n        p._fixChildNodesParent()\n      }\n    }\n  }\n\n  _indexInParent() {\n    if (this._parentNode) {\n      return this._parentNode.childNodes.indexOf(this)\n    }\n    return -1\n  }\n\n  get parentNode() {\n    return this._parentNode\n  }\n\n  get childNodes() {\n    return this._childNodes || []\n  }\n\n  get firstChild() {\n    return this._childNodes[0]\n  }\n\n  get lastChild() {\n    return this._childNodes[this._childNodes.length - 1]\n  }\n\n  get nextSibling() {\n    let i = this._indexInParent()\n    if (i != null) {\n      return this.parentNode.childNodes[i + 1] || null\n    }\n    return null\n  }\n\n  get previousSibling() {\n    let i = this._indexInParent()\n    if (i > 0) {\n      return this.parentNode.childNodes[i - 1] || null\n    }\n    return null\n  }\n\n  flatten({ condition = node => node instanceof VElement } = {}) {\n    let elements = []\n    if (condition(this)) {\n      elements.push(this)\n    }\n    for (let child of this._childNodes) {\n      elements.push(...child.flatten({ condition }))\n    }\n    return elements\n  }\n\n  render() {\n    return ''\n  }\n\n  get textContent() {\n    return this._childNodes.map(c => c.textContent).join('')\n  }\n\n  set textContent(text) {\n    this._childNodes = []\n    if (text) {\n      this.appendChild(new VTextNode(text.toString()))\n    }\n  }\n\n  contains(otherNode) {\n    if (otherNode === this) return true\n    // if (this._childNodes.includes(otherNode)) return true\n    return this._childNodes.some(n => n.contains(otherNode))\n  }\n\n  get ownerDocument() {\n    if (this.nodeType === VNode.DOCUMENT_NODE || this.nodeType === VNode.DOCUMENT_FRAGMENT_NODE) {\n      return this\n    }\n    return this?._parentNode?.ownerDocument\n  }\n\n  toString() {\n    return `${this.nodeName}`\n    // return `${this.nodeName}: ${JSON.stringify(this.nodeValue)}`\n  }\n\n  [inspect]() {\n    return `${this.constructor.name} \"${this.render()}\"`\n  }\n}\n\nexport class VTextNode extends VNode {\n\n  get nodeType() {\n    return VNode.TEXT_NODE\n  }\n\n  get nodeName() {\n    return '#text'\n  }\n\n  get nodeValue() {\n    return this._text || ''\n  }\n\n  get textContent() {\n    return this.nodeValue\n  }\n\n  constructor(text = '') {\n    super()\n    this._text = text\n  }\n\n  render() {\n    return this._text\n  }\n\n  cloneNode(deep = false) {\n    let node = super.cloneNode(deep)\n    node._text = this._text\n    return node\n  }\n\n}\n\nexport class VNodeQuery extends VNode {\n\n  getElementById(name) {\n    return this.flatten().find(e => e._attributes['id'] === name)\n  }\n\n  getElementsByClassName(name) {\n    return this.flatten().filter(e => e.classList.contains(name))\n  }\n\n  matches(selector) {\n    return matchSelector(selector, this)\n  }\n\n  querySelectorAll(selector) {\n    return this.flatten().filter(e => e.matches(selector))\n  }\n\n  querySelector(selector) {\n    return this.flatten().find(e => e.matches(selector))\n  }\n\n  //\n\n  parent(selector) {\n    if (this.matches(selector)) {\n      return this\n    }\n    if (this.parentNode == null) {\n      return null\n    }\n    return this.parentNode?.parent(selector)\n  }\n\n  handle(selector, handler) {\n    let i = 0\n    for (let el of this.querySelectorAll(selector)) {\n      handler(el, i++)\n    }\n  }\n\n}\n\n\nexport class VElement extends VNodeQuery {\n\n  get nodeType() {\n    return VNode.ELEMENT_NODE\n  }\n\n  get nodeName() {\n    return this._nodeName\n  }\n\n  constructor(name = 'div', attrs = {}) {\n    super()\n    this._nodeName = (name || '').toUpperCase()\n    this._attributes = attrs || {}\n    this._styles = null\n  }\n\n  cloneNode(deep = false) {\n    let node = super.cloneNode(deep)\n    node._nodeName = this._nodeName\n    node._attributes = Object.assign({}, this._attributes)\n    return node\n  }\n\n  get attributes() {\n    return this._attributes\n  }\n\n  setAttribute(name, value) {\n    this._attributes[name] = value\n    this._styles = null\n  }\n\n  getAttribute(name) {\n    return this._attributes[name]\n  }\n\n  removeAttribute(name) {\n    delete this._attributes[name]\n  }\n\n  hasAttribute(name) {\n    return this._attributes[name] != null\n  }\n\n  get style() {\n    if (this._styles == null) {\n      let styles = Object.assign({}, DEFAULTS[this.tagName.toLowerCase()] || {})\n      let styleString = this.getAttribute('style')\n      if (styleString) {\n        let m\n        let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g\n        while ((m = re.exec(styleString))) {\n          let name = m[1]\n          let value = m[2].trim()\n          styles[name] = value\n          let camel = (s) => s.replace(/[A-Z]/g, '-$&').toLowerCase()\n          styles[camel] = value\n        }\n      }\n      this._styles = styles\n    }\n    return this._styles\n  }\n\n  get tagName() {\n    return this._nodeName\n  }\n\n  get id() {\n    return this._attributes.id\n  }\n\n  set id(value) {\n    this._attributes.id = value\n  }\n\n  get src() {\n    return this._attributes.src\n  }\n\n  set src(value) {\n    this._attributes.src = value\n  }\n\n  //\n\n  getElementsByTagName(name) {\n    name = name.toUpperCase()\n    let elements = this.flatten()\n    if (name !== '*') {\n      return elements.filter(e => e.tagName === name)\n    }\n    return elements\n  }\n\n  // html\n\n  get innerHTML() {\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  set innerHTML(html) {\n    if (this.setInnerHTML) {\n      this.setInnerHTML(html)\n    } else {\n      throw 'set innerHTML not implemented'\n    }\n  }\n\n  get outerHTML() {\n    return this.render(html)\n  }\n\n  // class\n\n  get className() {\n    return this._attributes['class'] || ''\n  }\n\n  set className(name) {\n    if (Array.isArray(name)) {\n      name = name.filter(n => !!n).join(' ')\n    } else if (typeof name === 'object') {\n      name = (Object.entries(name)\n        .filter(([k, v]) => !!v)\n        .map(([k, v]) => k)\n        .join(' '))\n    }\n    this._attributes['class'] = name\n  }\n\n  get classList() {\n    let self = this\n    let classNames = (this.className || '').trim().split(/\\s+/g) || []\n    // log('classList', classNames)\n    return {\n      contains(s) {\n        return classNames.includes(s)\n      },\n      add(s) {\n        if (!(classNames.includes(s))) {\n          classNames.push(s)\n          self.className = classNames\n        }\n      },\n      remove(s) {\n        let index = classNames.indexOf(s)\n        if (index >= 0) {\n          classNames.splice(index, 1)\n          self.className = classNames\n        }\n      },\n    }\n  }\n\n  //\n\n  render(h = html) {\n    return h(\n      this.tagName.toLowerCase(),\n      this.attributes,\n      this.childNodes.map(c => c.render(h)),\n    )\n  }\n\n}\n\nexport class VDocumentFragment extends VNodeQuery {\n\n  get nodeType() {\n    return VNode.DOCUMENT_FRAGMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document-fragment'\n  }\n\n  render(h = html) {\n    return (this._childNodes.map(c => c.render(h) || []).join(''))\n  }\n\n  get innerHTML() { // for debug\n    return this._childNodes.map(c => c.render(html)).join('')\n  }\n\n  createElement(name, attrs = {}) {\n    return new VElement(name, attrs)\n  }\n\n  createDocumentFragment() {\n    return new VDocumentFragment()\n  }\n\n  createTextNode(text) {\n    return new VTextNode(text)\n  }\n\n}\n\nexport class VDocument extends VDocumentFragment {\n\n  get nodeType() {\n    return VNode.DOCUMENT_NODE\n  }\n\n  get nodeName() {\n    return '#document'\n  }\n\n  get documentElement() {\n    return this.firstChild\n  }\n\n  // render(h = html) {\n  //   let content =  super.render(h)\n  //   if (h.firstLine) {\n  //     content = h.firstLine + '\\n' + content\n  //   }\n  //   return content\n  // }\n\n}\n\nexport class VHTMLDocument extends VDocument {\n\n  constructor() {\n    super()\n    let html = new VElement('html')\n    let body = new VElement('body')\n    let head = new VElement('head')\n    let title = new VElement('title')\n    html.appendChild(head)\n    head.appendChild(title)\n    html.appendChild(body)\n    this.appendChild(html)\n  }\n\n  get body() {\n    return this.querySelector('body')\n  }\n\n  get title() {\n    return this.querySelector('title')?.textContent\n  }\n\n  set title(title) {\n    this.querySelector('title').textContent = title\n  }\n\n  get head() {\n    return this.querySelector('head')\n  }\n\n  render(h = html) {\n    let content = super.render(h)\n    if (h.firstLine) {\n      content = h.firstLine + '\\n' + content\n    }\n    return content\n  }\n\n}\n\nexport function createDocument() {\n  return new VDocument()\n}\n\nexport function createHTMLDocument() {\n  return new VHTMLDocument()\n}\n\nexport let document = createDocument()\nexport let h = hFactory({ document })\n", "// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { VDocumentFragment, VElement, VTextNode, document } from './vdom'\nimport { VNode } from './vdom'\nimport { Parser } from 'htmlparser2'\n\n// Makes sure we operate on VNodes\nexport function vdom(obj = null) {\n  if (obj instanceof VNode) {\n    return obj\n  }\n  if (obj instanceof Buffer) {\n    obj = obj.toString('utf-8')\n  }\n  if (typeof obj === 'string') {\n    return parseHTML(obj)\n  }\n  // console.warn('Cannot convert to VDOM:', obj)\n  return new VElement('div')\n}\n\nexport function parseHTML(html) {\n  let frag = new VDocumentFragment()\n\n  let stack = [frag]\n  let currentElement = frag\n\n  let parser = new Parser({\n    onopentag: (name, attrs) => {\n      let element = document.createElement(name, attrs)\n      stack.push(element)\n      currentElement.appendChild(element)\n      currentElement = element\n    },\n    ontext: function (text) {\n      if (currentElement?.lastChild?.nodeType === VNode.TEXT_NODE) {\n        currentElement.lastChild._text += text\n      } else {\n        currentElement.appendChild(new VTextNode(text))\n      }\n    },\n    onclosetag: function (name) {\n      let element = stack.pop()\n      currentElement = stack[stack.length - 1]\n      // if (element.nodeName !== currentElement.nodeName) {\n      //   console.log('error', element, currentElement)\n      // }\n    },\n  }, { decodeEntities: true })\n  parser.write(html)\n  parser.end()\n\n  // console.log('frag', frag.innerHTML)\n\n  return frag\n}\n\nVElement.prototype.setInnerHTML = function (html) {\n  let frag = parseHTML(html)\n  this._childNodes = frag._childNodes\n  this._fixChildNodesParent()\n}\n", "import { VNode } from './vdom.js'\nimport { VTextNode } from './vdom.js'\n\nfunction level(element) {\n  let indent = ''\n  while (element.parentNode) {\n    indent += '  '\n    element = element.parentNode\n  }\n  return indent.substr(2)\n}\n\nexport function tidyDOM(document, opt) {\n  let selector = 'meta,link,script,p,h1,h2,h3,h4,h5,h6,blockquote,div,ul,ol,li,article,section,footer,head,body,title,nav,section,article,hr,form'\n  document.handle(selector, e => {\n\n    // Ignore if inside PRE etc.\n    let ee = e\n    while (ee) {\n      if (['PRE', 'CODE', 'SCRIPT', 'STYLE', 'TT'].includes(ee.tagName)) return\n      ee = ee.parentNode\n    }\n\n    let prev = e.previousSibling\n    if (!prev || prev.nodeType !== VNode.TEXT_NODE || !prev.nodeValue?.endsWith('\\n')) {\n      e.parentNode?.insertBefore(new VTextNode('\\n'), e)\n    }\n    e.parentNode?.insertBefore(new VTextNode(level(e)), e)\n\n    let next = e.nextSibling\n    if (!next || next.nodeType !== VNode.TEXT_NODE || !next.nodeValue?.startsWith('\\n')) {\n      if (next) {\n        e.parentNode?.insertBefore(new VTextNode('\\n'), next)\n      } else {\n        e.parentNode?.appendChild(new VTextNode('\\n'))\n      }\n    }\n\n    if (e.childNodes.length) {\n      let first = e.firstChild\n      if (first.nodeType === VNode.TEXT_NODE) {\n        e.insertBefore(new VTextNode('\\n' + level(e) + '  '))\n      }\n      e.appendChild(new VTextNode('\\n' + level(e)))\n    }\n\n  })\n\n}\n", "import { markup } from './html.js'\nimport { hArgumentParser } from './h.js'\n\nexport function xml(itag, iattrs, ...ichildren) {\n  let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(true, tag, attrs, children)\n}\n\nxml.firstLine = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'\nxml.xml = true\n\nexport let h = xml\n", "export * from './vdom.js'\nexport * from './h'\nexport { vdom, parseHTML } from './vdomparser.js'\nexport { escapeHTML, unescapeHTML } from './encoding.js'\nexport { tidyDOM } from './tidy.js'\nexport { CDATA, html } from './html.js'\nexport { xml } from './xml.js'\n"],
  "mappings": "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",
  "names": []
}
